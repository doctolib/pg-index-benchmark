version: '3.8'
services:
  tool:
    build:
      context: ./
      dockerfile: Dockerfile
      network: host
    volumes:
      - ./demo/sample_app/:/host_files
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_PASSWORD: demo_pwd
      POSTGRES_DATABASE: postgres
      POSTGRES_USER: postgres
      POSTGRES_HOST: db
    command: [ "-c", "/host_files/config.yml", "-n", "1", "/host_files/queries.sql" ]
  db:
    image: postgres:alpine
    command: ['postgres', '-c', 'max_wal_senders=0', '-c', 'wal_level=minimal', '-c', 'shared_buffers=512MB', '-c', 'max_wal_size=10GB']
    environment:
      POSTGRES_PASSWORD: demo_pwd
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD", "/bin/bash", "/check_db_status.sh" ]
      interval: 1s
      timeout: 1s
      retries: 200
      start_period: 0.5s
    volumes:
      - ./demo/database/0_init.sql:/docker-entrypoint-initdb.d/0_init.sql:ro
      - ./demo/database/1_init.sh:/docker-entrypoint-initdb.d/1_init.sh:ro
      - ./demo/database/check_db_status.sh:/check_db_status.sh:ro
      - ./demo/database/postgres.conf:/etc/postgresql/postgresql.conf
